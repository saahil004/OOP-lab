#include <iostream>
#include <string>
using namespace std;

class Currency {
protected:
    double amount;
    string currencyCode;
    string currencySymbol;
    double exchangeRate;

public:
    Currency(double amt, string code, string symbol, double rate)
        : amount(amt), currencyCode(code), currencySymbol(symbol), exchangeRate(rate) {}

    virtual double convertToBase() const {
        return amount * exchangeRate;
    }

    virtual double convertTo(double targetRate) const {
        return convertToBase() / targetRate;
    }

    virtual void displayCurrency() const {
        cout << "Amount: " << currencySymbol << amount << " (" << currencyCode << ")" << endl;
    }
};

class Dollar : public Currency {
public:
    Dollar(double amt) : Currency(amt, "USD", "$", 1.0) {}

    void displayCurrency() const override {
        cout << "Dollar Amount: " << currencySymbol << amount << " (" << currencyCode << ")" << endl;
    }
};

class Euro : public Currency {
public:
    Euro(double amt) : Currency(amt, "EUR", "\u20AC", 1.1) {}

    void displayCurrency() const override {
        cout << "Euro Amount: " << currencySymbol << amount << " (" << currencyCode << ")" << endl;
    }
};

class Rupee : public Currency {
public:
    Rupee(double amt) : Currency(amt, "PKR", "\u20B9", 0.013) {}

    void displayCurrency() const override {
        cout << "Rupee Amount: " << currencySymbol << amount << " (" << currencyCode << ")" << endl;
    }
};

int main() {
    Dollar usd(100);
    Euro eur(100);
    Rupee pkr(100);

    usd.displayCurrency();
    eur.displayCurrency();
    pkr.displayCurrency();

    cout << "100 USD in EUR: " << usd.convertTo(1.1) << " EUR" << endl;
    cout << "100 EUR in PKR: " << eur.convertTo(0.013) << " PKR" << endl;
    cout << "100 PKR in USD: " << pkr.convertTo(1.0) << " USD" << endl;
    
    return 0;
}
